{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport NProgress from \"nprogress\";\nexport const useLoading = () => {\n  const router = useRouter();\n  useEffect(() => {\n    const handleStart = () => NProgress.start();\n\n    const handleComplete = () => NProgress.done();\n\n    router.events.on(\"routeChangeStart\", handleStart);\n    router.events.on(\"routeChangeComplete\", handleComplete);\n    router.events.on(\"routeChangeError\", handleComplete);\n    return () => {\n      router.events.off(\"routeChangeStart\", handleStart);\n      router.events.off(\"routeChangeComplete\", handleComplete);\n      router.events.off(\"routeChangeError\", handleComplete);\n    };\n  });\n};","map":{"version":3,"sources":["D:/Proyectos Personales/NextJS/podcasts/hooks/useLoading.js"],"names":["React","useEffect","useRouter","NProgress","useLoading","router","handleStart","start","handleComplete","done","events","on","off"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,WAAW,GAAG,MAAMH,SAAS,CAACI,KAAV,EAA1B;;AACA,UAAMC,cAAc,GAAG,MAAML,SAAS,CAACM,IAAV,EAA7B;;AACAJ,IAAAA,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCL,WAArC;AACAD,IAAAA,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCH,cAAxC;AACAH,IAAAA,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCH,cAArC;AACA,WAAO,MAAM;AACXH,MAAAA,MAAM,CAACK,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCN,WAAtC;AACAD,MAAAA,MAAM,CAACK,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCJ,cAAzC;AACAH,MAAAA,MAAM,CAACK,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCJ,cAAtC;AACD,KAJD;AAKD,GAXQ,CAAT;AAYD,CAfM","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport NProgress from \"nprogress\";\r\n\r\nexport const useLoading = () => {\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const handleStart = () => NProgress.start();\r\n    const handleComplete = () => NProgress.done();\r\n    router.events.on(\"routeChangeStart\", handleStart);\r\n    router.events.on(\"routeChangeComplete\", handleComplete);\r\n    router.events.on(\"routeChangeError\", handleComplete);\r\n    return () => {\r\n      router.events.off(\"routeChangeStart\", handleStart);\r\n      router.events.off(\"routeChangeComplete\", handleComplete);\r\n      router.events.off(\"routeChangeError\", handleComplete);\r\n    };\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}