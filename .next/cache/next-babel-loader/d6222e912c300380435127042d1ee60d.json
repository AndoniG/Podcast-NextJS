{"ast":null,"code":"var _jsxFileName = \"D:\\\\Proyectos Personales\\\\NextJS\\\\podcasts\\\\pages\\\\channel.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { PodcastGrid } from \"../components/PodcastGrid\";\nimport { SeriesGrid } from \"../components/SeriesGrid\";\nexport async function getServerSideProps({\n  query\n}) {\n  try {\n    let channelId = query.id;\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${channelId}`), fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`), fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`)]);\n    let channel = (await reqChannel.json()).body.channel;\n    let audioClips = (await reqAudios.json()).body.audio_clips;\n    let series = (await reqSeries.json()).body.channels;\n    return {\n      props: {\n        channel,\n        audioClips,\n        series\n      }\n    };\n  } catch (e) {}\n}\nexport default (({\n  channel,\n  audioClips,\n  series\n}) => __jsx(Layout, {\n  title: `${channel.title}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, series.length > 0 && __jsx(SeriesGrid, {\n  series: series,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 27\n  }\n}), audioClips.length > 0 && __jsx(PodcastGrid, {\n  audioClips: audioClips,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 31\n  }\n})));","map":{"version":3,"sources":["D:/Proyectos Personales/NextJS/podcasts/pages/channel.js"],"names":["React","Layout","PodcastGrid","SeriesGrid","getServerSideProps","query","channelId","id","reqChannel","reqSeries","reqAudios","Promise","all","fetch","channel","json","body","audioClips","audio_clips","series","channels","props","e","title","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAO,eAAeC,kBAAf,CAAkC;AAAEC,EAAAA;AAAF,CAAlC,EAA6C;AAClD,MAAI;AACF,QAAIC,SAAS,GAAGD,KAAK,CAACE,EAAtB;AACA,QAAI,CAACC,UAAD,EAAaC,SAAb,EAAwBC,SAAxB,IAAqC,MAAMC,OAAO,CAACC,GAAR,CAAY,CACzDC,KAAK,CAAE,sCAAqCP,SAAU,EAAjD,CADoD,EAEzDO,KAAK,CAAE,sCAAqCP,SAAU,iBAAjD,CAFoD,EAGzDO,KAAK,CAAE,sCAAqCP,SAAU,cAAjD,CAHoD,CAAZ,CAA/C;AAMA,QAAIQ,OAAO,GAAG,CAAC,MAAMN,UAAU,CAACO,IAAX,EAAP,EAA0BC,IAA1B,CAA+BF,OAA7C;AACA,QAAIG,UAAU,GAAG,CAAC,MAAMP,SAAS,CAACK,IAAV,EAAP,EAAyBC,IAAzB,CAA8BE,WAA/C;AACA,QAAIC,MAAM,GAAG,CAAC,MAAMV,SAAS,CAACM,IAAV,EAAP,EAAyBC,IAAzB,CAA8BI,QAA3C;AAEA,WAAO;AAAEC,MAAAA,KAAK,EAAE;AAAEP,QAAAA,OAAF;AAAWG,QAAAA,UAAX;AAAuBE,QAAAA;AAAvB;AAAT,KAAP;AACD,GAbD,CAaE,OAAOG,CAAP,EAAU,CAAE;AACf;AAED,gBAAe,CAAC;AAAER,EAAAA,OAAF;AAAWG,EAAAA,UAAX;AAAuBE,EAAAA;AAAvB,CAAD,KACb,MAAC,MAAD;AAAQ,EAAA,KAAK,EAAG,GAAEL,OAAO,CAACS,KAAM,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGJ,MAAM,CAACK,MAAP,GAAgB,CAAhB,IAAqB,MAAC,UAAD;AAAY,EAAA,MAAM,EAAEL,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADxB,EAEGF,UAAU,CAACO,MAAX,GAAoB,CAApB,IAAyB,MAAC,WAAD;AAAa,EAAA,UAAU,EAAEP,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAF5B,CADF","sourcesContent":["import React from \"react\";\r\nimport { Layout } from \"../components/Layout\";\r\nimport { PodcastGrid } from \"../components/PodcastGrid\";\r\nimport { SeriesGrid } from \"../components/SeriesGrid\";\r\n\r\nexport async function getServerSideProps({ query }) {\r\n  try {\r\n    let channelId = query.id;\r\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([\r\n      fetch(`https://api.audioboom.com/channels/${channelId}`),\r\n      fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`),\r\n      fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`),\r\n    ]);\r\n\r\n    let channel = (await reqChannel.json()).body.channel;\r\n    let audioClips = (await reqAudios.json()).body.audio_clips;\r\n    let series = (await reqSeries.json()).body.channels;\r\n\r\n    return { props: { channel, audioClips, series } };\r\n  } catch (e) {}\r\n}\r\n\r\nexport default ({ channel, audioClips, series }) => (\r\n  <Layout title={`${channel.title}`}>\r\n    {series.length > 0 && <SeriesGrid series={series} />}\r\n    {audioClips.length > 0 && <PodcastGrid audioClips={audioClips} />}\r\n  </Layout>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}