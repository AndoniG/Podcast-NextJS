{"ast":null,"code":"var _jsxFileName = \"D:\\\\Proyectos Personales\\\\NextJS\\\\podcasts\\\\pages\\\\[channel].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { PodcastGrid } from \"../components/PodcastGrid\";\nimport { SeriesGrid } from \"../components/SeriesGrid\";\nimport { PodcastPlayer } from \"../components/PodcastPlayer\";\nimport Error from \"./_error\";\nexport async function getServerSideProps({\n  query,\n  res\n}) {\n  try {\n    let channelId = query.id;\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${channelId}`), fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`), fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`)]);\n    const channelErrorCode = reqChannel.ok ? false : reqChannel.status;\n    const seriesErrorCode = reqSeries.ok ? false : reqSeries.status;\n    const audiosErrorCode = reqAudios.ok ? false : reqAudios.status;\n    const statusCode = channelErrorCode !== false ? channelErrorCode : seriesErrorCode !== false ? seriesErrorCode : audiosErrorCode;\n\n    if (statusCode) {\n      return {\n        props: {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode\n        }\n      };\n    }\n\n    let channel = (await reqChannel.json()).body.channel;\n    let audioClips = (await reqAudios.json()).body.audio_clips;\n    let series = (await reqSeries.json()).body.channels;\n    return {\n      props: {\n        channel,\n        audioClips,\n        series,\n        statusCode\n      }\n    };\n  } catch (e) {\n    res.statusCode = e.status || 503;\n    console.log(\"catch\");\n    return {\n      props: {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      }\n    };\n  }\n}\nexport default (({\n  channel,\n  audioClips,\n  series,\n  statusCode\n}) => {\n  const {\n    0: selectedPodcast,\n    1: setSelectedPodcast\n  } = useState(null);\n\n  const handleSetSelectedPost = (event, podcast) => {\n    event.preventDefault();\n    setSelectedPodcast(podcast);\n  };\n\n  if (statusCode) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    title: `${channel.title}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, selectedPodcast && __jsx(PodcastPlayer, {\n    clip: selectedPodcast,\n    onClose: setSelectedPodcast(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), series.length > 0 && __jsx(SeriesGrid, {\n    series: series,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }), audioClips.length > 0 && __jsx(PodcastGrid, {\n    audioClips: audioClips,\n    setSelectedPodcast: handleSetSelectedPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"115308549\",\n    __self: this\n  }, \".modal.jsx-115308549{position:fixed;top:0;left:0;right:0;bottom:0;z-index:99999;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxQcm95ZWN0b3MgUGVyc29uYWxlc1xcTmV4dEpTXFxwb2RjYXN0c1xccGFnZXNcXFtjaGFubmVsXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRWtCLEFBRzBCLGVBQ1QsTUFDQyxPQUNDLFFBQ0MsU0FDSyxjQUNoQiIsImZpbGUiOiJEOlxcUHJveWVjdG9zIFBlcnNvbmFsZXNcXE5leHRKU1xccG9kY2FzdHNcXHBhZ2VzXFxbY2hhbm5lbF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgTGF5b3V0IH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvTGF5b3V0XCI7XHJcbmltcG9ydCB7IFBvZGNhc3RHcmlkIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9kY2FzdEdyaWRcIjtcclxuaW1wb3J0IHsgU2VyaWVzR3JpZCB9IGZyb20gXCIuLi9jb21wb25lbnRzL1Nlcmllc0dyaWRcIjtcclxuaW1wb3J0IHsgUG9kY2FzdFBsYXllciB9IGZyb20gXCIuLi9jb21wb25lbnRzL1BvZGNhc3RQbGF5ZXJcIjtcclxuaW1wb3J0IEVycm9yIGZyb20gXCIuL19lcnJvclwiO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlcnZlclNpZGVQcm9wcyh7IHF1ZXJ5LCByZXMgfSkge1xyXG4gIHRyeSB7XHJcbiAgICBsZXQgY2hhbm5lbElkID0gcXVlcnkuaWQ7XHJcbiAgICBsZXQgW3JlcUNoYW5uZWwsIHJlcVNlcmllcywgcmVxQXVkaW9zXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcclxuICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtjaGFubmVsSWR9YCksXHJcbiAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7Y2hhbm5lbElkfS9jaGlsZF9jaGFubmVsc2ApLFxyXG4gICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2NoYW5uZWxJZH0vYXVkaW9fY2xpcHNgKSxcclxuICAgIF0pO1xyXG5cclxuICAgIGNvbnN0IGNoYW5uZWxFcnJvckNvZGUgPSByZXFDaGFubmVsLm9rID8gZmFsc2UgOiByZXFDaGFubmVsLnN0YXR1cztcclxuICAgIGNvbnN0IHNlcmllc0Vycm9yQ29kZSA9IHJlcVNlcmllcy5vayA/IGZhbHNlIDogcmVxU2VyaWVzLnN0YXR1cztcclxuICAgIGNvbnN0IGF1ZGlvc0Vycm9yQ29kZSA9IHJlcUF1ZGlvcy5vayA/IGZhbHNlIDogcmVxQXVkaW9zLnN0YXR1cztcclxuXHJcbiAgICBjb25zdCBzdGF0dXNDb2RlID1cclxuICAgICAgY2hhbm5lbEVycm9yQ29kZSAhPT0gZmFsc2VcclxuICAgICAgICA/IGNoYW5uZWxFcnJvckNvZGVcclxuICAgICAgICA6IHNlcmllc0Vycm9yQ29kZSAhPT0gZmFsc2VcclxuICAgICAgICA/IHNlcmllc0Vycm9yQ29kZVxyXG4gICAgICAgIDogYXVkaW9zRXJyb3JDb2RlO1xyXG5cclxuICAgIGlmIChzdGF0dXNDb2RlKSB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgcHJvcHM6IHsgY2hhbm5lbDogbnVsbCwgYXVkaW9DbGlwczogbnVsbCwgc2VyaWVzOiBudWxsLCBzdGF0dXNDb2RlIH0sXHJcbiAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGNoYW5uZWwgPSAoYXdhaXQgcmVxQ2hhbm5lbC5qc29uKCkpLmJvZHkuY2hhbm5lbDtcclxuICAgIGxldCBhdWRpb0NsaXBzID0gKGF3YWl0IHJlcUF1ZGlvcy5qc29uKCkpLmJvZHkuYXVkaW9fY2xpcHM7XHJcbiAgICBsZXQgc2VyaWVzID0gKGF3YWl0IHJlcVNlcmllcy5qc29uKCkpLmJvZHkuY2hhbm5lbHM7XHJcblxyXG4gICAgcmV0dXJuIHsgcHJvcHM6IHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlIH0gfTtcclxuICB9IGNhdGNoIChlKSB7XHJcbiAgICByZXMuc3RhdHVzQ29kZSA9IGUuc3RhdHVzIHx8IDUwMztcclxuICAgIGNvbnNvbGUubG9nKFwiY2F0Y2hcIik7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBwcm9wczogeyBjaGFubmVsOiBudWxsLCBhdWRpb0NsaXBzOiBudWxsLCBzZXJpZXM6IG51bGwsIHN0YXR1c0NvZGU6IDUwMyB9LFxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0ICh7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZSB9KSA9PiB7XHJcbiAgY29uc3QgW3NlbGVjdGVkUG9kY2FzdCwgc2V0U2VsZWN0ZWRQb2RjYXN0XSA9IHVzZVN0YXRlKG51bGwpO1xyXG5cclxuICBjb25zdCBoYW5kbGVTZXRTZWxlY3RlZFBvc3QgPSAoZXZlbnQsIHBvZGNhc3QpID0+IHtcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBzZXRTZWxlY3RlZFBvZGNhc3QocG9kY2FzdCk7XHJcbiAgfTtcclxuXHJcbiAgaWYgKHN0YXR1c0NvZGUpIHtcclxuICAgIHJldHVybiA8RXJyb3Igc3RhdHVzQ29kZT17c3RhdHVzQ29kZX0gLz47XHJcbiAgfVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPExheW91dCB0aXRsZT17YCR7Y2hhbm5lbC50aXRsZX1gfT5cclxuICAgICAge3NlbGVjdGVkUG9kY2FzdCAmJiAoXHJcbiAgICAgICAgPFBvZGNhc3RQbGF5ZXJcclxuICAgICAgICAgIGNsaXA9e3NlbGVjdGVkUG9kY2FzdH1cclxuICAgICAgICAgIG9uQ2xvc2U9e3NldFNlbGVjdGVkUG9kY2FzdChudWxsKX1cclxuICAgICAgICAvPlxyXG4gICAgICApfVxyXG4gICAgICB7c2VyaWVzLmxlbmd0aCA+IDAgJiYgPFNlcmllc0dyaWQgc2VyaWVzPXtzZXJpZXN9IC8+fVxyXG4gICAgICB7YXVkaW9DbGlwcy5sZW5ndGggPiAwICYmIChcclxuICAgICAgICA8UG9kY2FzdEdyaWRcclxuICAgICAgICAgIGF1ZGlvQ2xpcHM9e2F1ZGlvQ2xpcHN9XHJcbiAgICAgICAgICBzZXRTZWxlY3RlZFBvZGNhc3Q9e2hhbmRsZVNldFNlbGVjdGVkUG9zdH1cclxuICAgICAgICAvPlxyXG4gICAgICApfVxyXG4gICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgLm1vZGFsIHtcclxuICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgIHotaW5kZXg6IDk5OTk5O1xyXG4gICAgICAgIH1cclxuICAgICAgYH08L3N0eWxlPlxyXG4gICAgPC9MYXlvdXQ+XHJcbiAgKTtcclxufTtcclxuIl19 */\\n/*@ sourceURL=D:\\\\\\\\Proyectos Personales\\\\\\\\NextJS\\\\\\\\podcasts\\\\\\\\pages\\\\\\\\[channel].js */\"));\n});","map":{"version":3,"sources":["D:/Proyectos Personales/NextJS/podcasts/pages/[channel].js"],"names":["React","useState","Layout","PodcastGrid","SeriesGrid","PodcastPlayer","Error","getServerSideProps","query","res","channelId","id","reqChannel","reqSeries","reqAudios","Promise","all","fetch","channelErrorCode","ok","status","seriesErrorCode","audiosErrorCode","statusCode","props","channel","audioClips","series","json","body","audio_clips","channels","e","console","log","selectedPodcast","setSelectedPodcast","handleSetSelectedPost","event","podcast","preventDefault","title","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Layout } from \"../components/Layout\";\r\nimport { PodcastGrid } from \"../components/PodcastGrid\";\r\nimport { SeriesGrid } from \"../components/SeriesGrid\";\r\nimport { PodcastPlayer } from \"../components/PodcastPlayer\";\r\nimport Error from \"./_error\";\r\n\r\nexport async function getServerSideProps({ query, res }) {\r\n  try {\r\n    let channelId = query.id;\r\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([\r\n      fetch(`https://api.audioboom.com/channels/${channelId}`),\r\n      fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`),\r\n      fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`),\r\n    ]);\r\n\r\n    const channelErrorCode = reqChannel.ok ? false : reqChannel.status;\r\n    const seriesErrorCode = reqSeries.ok ? false : reqSeries.status;\r\n    const audiosErrorCode = reqAudios.ok ? false : reqAudios.status;\r\n\r\n    const statusCode =\r\n      channelErrorCode !== false\r\n        ? channelErrorCode\r\n        : seriesErrorCode !== false\r\n        ? seriesErrorCode\r\n        : audiosErrorCode;\r\n\r\n    if (statusCode) {\r\n      return {\r\n        props: { channel: null, audioClips: null, series: null, statusCode },\r\n      };\r\n    }\r\n\r\n    let channel = (await reqChannel.json()).body.channel;\r\n    let audioClips = (await reqAudios.json()).body.audio_clips;\r\n    let series = (await reqSeries.json()).body.channels;\r\n\r\n    return { props: { channel, audioClips, series, statusCode } };\r\n  } catch (e) {\r\n    res.statusCode = e.status || 503;\r\n    console.log(\"catch\");\r\n    return {\r\n      props: { channel: null, audioClips: null, series: null, statusCode: 503 },\r\n    };\r\n  }\r\n}\r\n\r\nexport default ({ channel, audioClips, series, statusCode }) => {\r\n  const [selectedPodcast, setSelectedPodcast] = useState(null);\r\n\r\n  const handleSetSelectedPost = (event, podcast) => {\r\n    event.preventDefault();\r\n    setSelectedPodcast(podcast);\r\n  };\r\n\r\n  if (statusCode) {\r\n    return <Error statusCode={statusCode} />;\r\n  }\r\n\r\n  return (\r\n    <Layout title={`${channel.title}`}>\r\n      {selectedPodcast && (\r\n        <PodcastPlayer\r\n          clip={selectedPodcast}\r\n          onClose={setSelectedPodcast(null)}\r\n        />\r\n      )}\r\n      {series.length > 0 && <SeriesGrid series={series} />}\r\n      {audioClips.length > 0 && (\r\n        <PodcastGrid\r\n          audioClips={audioClips}\r\n          setSelectedPodcast={handleSetSelectedPost}\r\n        />\r\n      )}\r\n      <style jsx>{`\r\n        .modal {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          z-index: 99999;\r\n        }\r\n      `}</style>\r\n    </Layout>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}