{"ast":null,"code":"var _jsxFileName = \"D:\\\\Proyectos Personales\\\\NextJS\\\\podcasts\\\\pages\\\\channel.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { PodcastGrid } from \"../components/PodcastGrid\";\nimport { SeriesGrid } from \"../components/SeriesGrid\";\nimport Error from \"./_error\";\nexport async function getServerSideProps({\n  query,\n  res\n}) {\n  try {\n    let channelId = query.id;\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${channelId}`), fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`), fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`)]);\n    const channelErrorCode = reqChannel.ok ? false : reqChannel.status;\n    const seriesErrorCode = reqSeries.ok ? false : reqSeries.status;\n    const audiosErrorCode = reqAudios.ok ? false : reqAudios.status;\n    const statusCode = channelErrorCode !== false ? channelErrorCode : seriesErrorCode !== false ? seriesErrorCode : audiosErrorCode;\n\n    if (statusCode) {\n      const ERROR = new Error(\"Something went wrong!\");\n      console.log(\"entre\");\n      ERROR.status = statusCode;\n      throw Error;\n    }\n\n    let channel = (await reqChannel.json()).body.channel;\n    let audioClips = (await reqAudios.json()).body.audio_clips;\n    let series = (await reqSeries.json()).body.channels;\n    return {\n      props: {\n        channel,\n        audioClips,\n        series,\n        statusCode\n      }\n    };\n  } catch (e) {\n    res.statusCode = e.status || 503;\n    console.log(e.status);\n    return {\n      props: {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      }\n    };\n  }\n}\nexport default (({\n  channel,\n  audioClips,\n  series,\n  statusCode\n}) => {\n  if (statusCode) {\n    return __jsx(Error, {\n      statusCode: statusCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    title: `${channel.title}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, series.length > 0 && __jsx(SeriesGrid, {\n    series: series,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }), audioClips.length > 0 && __jsx(PodcastGrid, {\n    audioClips: audioClips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }));\n});","map":{"version":3,"sources":["D:/Proyectos Personales/NextJS/podcasts/pages/channel.js"],"names":["React","Layout","PodcastGrid","SeriesGrid","Error","getServerSideProps","query","res","channelId","id","reqChannel","reqSeries","reqAudios","Promise","all","fetch","channelErrorCode","ok","status","seriesErrorCode","audiosErrorCode","statusCode","ERROR","console","log","channel","json","body","audioClips","audio_clips","series","channels","props","e","title","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,eAAeC,kBAAf,CAAkC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAlC,EAAkD;AACvD,MAAI;AACF,QAAIC,SAAS,GAAGF,KAAK,CAACG,EAAtB;AACA,QAAI,CAACC,UAAD,EAAaC,SAAb,EAAwBC,SAAxB,IAAqC,MAAMC,OAAO,CAACC,GAAR,CAAY,CACzDC,KAAK,CAAE,sCAAqCP,SAAU,EAAjD,CADoD,EAEzDO,KAAK,CAAE,sCAAqCP,SAAU,iBAAjD,CAFoD,EAGzDO,KAAK,CAAE,sCAAqCP,SAAU,cAAjD,CAHoD,CAAZ,CAA/C;AAMA,UAAMQ,gBAAgB,GAAGN,UAAU,CAACO,EAAX,GAAgB,KAAhB,GAAwBP,UAAU,CAACQ,MAA5D;AACA,UAAMC,eAAe,GAAGR,SAAS,CAACM,EAAV,GAAe,KAAf,GAAuBN,SAAS,CAACO,MAAzD;AACA,UAAME,eAAe,GAAGR,SAAS,CAACK,EAAV,GAAe,KAAf,GAAuBL,SAAS,CAACM,MAAzD;AAEA,UAAMG,UAAU,GACdL,gBAAgB,KAAK,KAArB,GACIA,gBADJ,GAEIG,eAAe,KAAK,KAApB,GACAA,eADA,GAEAC,eALN;;AAOA,QAAIC,UAAJ,EAAgB;AACd,YAAMC,KAAK,GAAG,IAAIlB,KAAJ,CAAU,uBAAV,CAAd;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAF,MAAAA,KAAK,CAACJ,MAAN,GAAeG,UAAf;AACA,YAAMjB,KAAN;AACD;;AAED,QAAIqB,OAAO,GAAG,CAAC,MAAMf,UAAU,CAACgB,IAAX,EAAP,EAA0BC,IAA1B,CAA+BF,OAA7C;AACA,QAAIG,UAAU,GAAG,CAAC,MAAMhB,SAAS,CAACc,IAAV,EAAP,EAAyBC,IAAzB,CAA8BE,WAA/C;AACA,QAAIC,MAAM,GAAG,CAAC,MAAMnB,SAAS,CAACe,IAAV,EAAP,EAAyBC,IAAzB,CAA8BI,QAA3C;AAEA,WAAO;AAAEC,MAAAA,KAAK,EAAE;AAAEP,QAAAA,OAAF;AAAWG,QAAAA,UAAX;AAAuBE,QAAAA,MAAvB;AAA+BT,QAAAA;AAA/B;AAAT,KAAP;AACD,GA/BD,CA+BE,OAAOY,CAAP,EAAU;AACV1B,IAAAA,GAAG,CAACc,UAAJ,GAAiBY,CAAC,CAACf,MAAF,IAAY,GAA7B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYS,CAAC,CAACf,MAAd;AACA,WAAO;AACLc,MAAAA,KAAK,EAAE;AAAEP,QAAAA,OAAO,EAAE,IAAX;AAAiBG,QAAAA,UAAU,EAAE,IAA7B;AAAmCE,QAAAA,MAAM,EAAE,IAA3C;AAAiDT,QAAAA,UAAU,EAAE;AAA7D;AADF,KAAP;AAGD;AACF;AAED,gBAAe,CAAC;AAAEI,EAAAA,OAAF;AAAWG,EAAAA,UAAX;AAAuBE,EAAAA,MAAvB;AAA+BT,EAAAA;AAA/B,CAAD,KAAiD;AAC9D,MAAIA,UAAJ,EAAgB;AACd,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAG,GAAEI,OAAO,CAACS,KAAM,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,CAACK,MAAP,GAAgB,CAAhB,IAAqB,MAAC,UAAD;AAAY,IAAA,MAAM,EAAEL,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,EAEGF,UAAU,CAACO,MAAX,GAAoB,CAApB,IAAyB,MAAC,WAAD;AAAa,IAAA,UAAU,EAAEP,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF5B,CADF;AAMD,CAXD","sourcesContent":["import React from \"react\";\r\nimport { Layout } from \"../components/Layout\";\r\nimport { PodcastGrid } from \"../components/PodcastGrid\";\r\nimport { SeriesGrid } from \"../components/SeriesGrid\";\r\nimport Error from \"./_error\";\r\n\r\nexport async function getServerSideProps({ query, res }) {\r\n  try {\r\n    let channelId = query.id;\r\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([\r\n      fetch(`https://api.audioboom.com/channels/${channelId}`),\r\n      fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`),\r\n      fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`),\r\n    ]);\r\n\r\n    const channelErrorCode = reqChannel.ok ? false : reqChannel.status;\r\n    const seriesErrorCode = reqSeries.ok ? false : reqSeries.status;\r\n    const audiosErrorCode = reqAudios.ok ? false : reqAudios.status;\r\n\r\n    const statusCode =\r\n      channelErrorCode !== false\r\n        ? channelErrorCode\r\n        : seriesErrorCode !== false\r\n        ? seriesErrorCode\r\n        : audiosErrorCode;\r\n\r\n    if (statusCode) {\r\n      const ERROR = new Error(\"Something went wrong!\");\r\n      console.log(\"entre\");\r\n      ERROR.status = statusCode;\r\n      throw Error;\r\n    }\r\n\r\n    let channel = (await reqChannel.json()).body.channel;\r\n    let audioClips = (await reqAudios.json()).body.audio_clips;\r\n    let series = (await reqSeries.json()).body.channels;\r\n\r\n    return { props: { channel, audioClips, series, statusCode } };\r\n  } catch (e) {\r\n    res.statusCode = e.status || 503;\r\n    console.log(e.status);\r\n    return {\r\n      props: { channel: null, audioClips: null, series: null, statusCode: 503 },\r\n    };\r\n  }\r\n}\r\n\r\nexport default ({ channel, audioClips, series, statusCode }) => {\r\n  if (statusCode) {\r\n    return <Error statusCode={statusCode} />;\r\n  }\r\n\r\n  return (\r\n    <Layout title={`${channel.title}`}>\r\n      {series.length > 0 && <SeriesGrid series={series} />}\r\n      {audioClips.length > 0 && <PodcastGrid audioClips={audioClips} />}\r\n    </Layout>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}