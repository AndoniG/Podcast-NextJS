{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { PodcastGrid } from \"../components/PodcastGrid\";\nimport { SeriesGrid } from \"../components/SeriesGrid\";\nimport { PodcastPlayer } from \"../components/PodcastPlayer\";\nimport Error from \"./_error\";\nexport async function getServerSideProps({\n  query,\n  res\n}) {\n  try {\n    let channelId = query.id;\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${channelId}`), fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`), fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`)]);\n    const channelErrorCode = reqChannel.ok ? false : reqChannel.status;\n    const seriesErrorCode = reqSeries.ok ? false : reqSeries.status;\n    const audiosErrorCode = reqAudios.ok ? false : reqAudios.status;\n    const statusCode = channelErrorCode !== false ? channelErrorCode : seriesErrorCode !== false ? seriesErrorCode : audiosErrorCode;\n\n    if (statusCode) {\n      return {\n        props: {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode\n        }\n      };\n    }\n\n    let channel = (await reqChannel.json()).body.channel;\n    let audioClips = (await reqAudios.json()).body.audio_clips;\n    let series = (await reqSeries.json()).body.channels;\n    return {\n      props: {\n        channel,\n        audioClips,\n        series,\n        statusCode\n      }\n    };\n  } catch (e) {\n    res.statusCode = e.status || 503;\n    console.log(\"catch\");\n    return {\n      props: {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      }\n    };\n  }\n}\nexport default (({\n  channel,\n  audioClips,\n  series,\n  statusCode\n}) => {\n  const {\n    0: selectedPodcast,\n    1: setSelectedPodcast\n  } = useState(null);\n\n  const handleSetSelectedPost = (event, podcast) => {\n    event.preventDefault();\n    console.log(podcast);\n    setSelectedPodcast(podcast);\n  };\n\n  if (statusCode) {\n    return __jsx(Error, {\n      statusCode: statusCode\n    });\n  }\n\n  return __jsx(Layout, {\n    title: `${channel.title}`\n  }, selectedPodcast && __jsx(\"div\", {\n    className: \"jsx-115308549\" + \" \" + \"modal\"\n  }, __jsx(PodcastPlayer, {\n    clip: selectedPodcast,\n    onClose: setSelectedPodcast\n  })), series.length > 0 && __jsx(SeriesGrid, {\n    series: series\n  }), audioClips.length > 0 && __jsx(PodcastGrid, {\n    audioClips: audioClips,\n    setSelectedPodcast: handleSetSelectedPost\n  }), __jsx(_JSXStyle, {\n    id: \"115308549\"\n  }, [\".modal.jsx-115308549{position:fixed;top:0;left:0;right:0;bottom:0;z-index:99999;}\"]));\n});","map":null,"metadata":{},"sourceType":"module"}